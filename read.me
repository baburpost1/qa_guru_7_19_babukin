Добавить проверку на статус код=200
Добавить проверку ответа на соответствие схеме
Добавить проверку данных в теле ответа там где возможно

1.Проверка получения листа пользователей и что каждый из них соответсвует схеме
2.Проверка запроса одиночного юзера
3.Проверка Создания пользователя
4.Проверка Редактирования поьзователя
5.Проверка Удаления пользователя
6.Регистрация Нового пользователя - позитивный ТК
7.Регистрация Нового пользователя - негативный ТК



Такой чеклистик еще есть у меня

ЧЕКЛИСТ ПРОВЕРОК API
1) Корректность структуры данных
2) POST запросы:
- Заполнены все поля валидными данными
- Заполнены только обязательные поля
- Заполнены не все обязательные поля
- Не заполнено ни одно поле
- Валидация данных в полях (корректные и некорректные данные)
- Пустой JSON
- Дата создания объекта
3) GET запросы:
- Пустой список (если возможно)
- Заполненный список
- Пагинация в списке (limit, offset)
- Получение списка с ограничением на количество записей
- Получение списка начиная с указанного номера
- В случае передачи параметров с некорректным значением возвращается 400 с описанием ошибки в теле ответа
- При отрицательном offset список пользователей возвращается начиная с первой позиции
- При несуществующем offset возвращается пустой список пользователей
- Сортировка списка
- Запрос данных по валидному ID, проверка возвращения корректных данных
- Запрос данных по несуществующему ID, но в валидном формате
- Запрос данных по невалидному ID
4) PUT запросы:
- Обновление с корректными данными
- Обновление по несуществующему ID
- Обновление по невалидному ID
- Валидация полей (корректные и некорректные данные)
- Частичное обновление (в JSON присутствуют не все поля)
5) DELETE запросы
- Удаление существующего объекта
- Удаление уже удаленного объекта
- Удаление по несуществующему ID
- Удаление по невалидному ID
- Удаление и повторное добавление такой же сущности (если есть уникальные поля)
6) Проверка статусов ответов
7) Проверка всех возможных ошибок
8) Остальные специфичные проверки в случае сложной логики